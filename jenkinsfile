#!groovy
pipeline{
 agent any
 
  tools {
    maven 'maven'
  }
//   environment{
//     sonar_token=credentials("")
//     dojo_sonar_url= 'URL'
//   }
script{
 try{
     stages{
        //stage('Code Clone from GIT'){
          //  steps{
            //    withCredentials()
            //}
        //}
        stage('Compile and Clean'){
            steps{
                bat "mvn -f pom.xml clean compile"
            }
        }
        
        stage("Test"){
            steps{
               bat "mvn -f pom.xml test"
            }

        }

        stage('Build'){
            steps{
                bat "mvn -f pom.xml package"
            }

        }

        stage('Verify'){
            steps{
                bat "mvn -f pom.xml verify"
            }
        }

        stage('Install'){
            steps{
                bat "mvn -f pom.xml install"
            }
        }

        stage('SonarQube Report'){
            steps{
                bat  "mvn -f pom.xml"
            }
            post{
                always{
                    junit allowEmptyresults: true,testResults: '**/test-results/*.xml'
                }
                failure{
                    echo "Pipeline Failed"
                }
            }
        }

        stage('Code Coverage Report'){

        }

        stage('Build Docker'){
              bat "docker build -f dockerfile -t insappv1 . "
        }

//         stage('Deployment on Kubernetes'){
// 
//         }

      }
  }
  catch(all) {
         currentBuild.result = 'FAILURE'
         post {
             always {
                     emailext body: 'A Test EMail', recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: 'Test'
             }
         }
  }
}
  //finally {
    //     step $class: 'JUnitResultArchiver', testResults: '**/TEST-*.xml'
  //}

}

