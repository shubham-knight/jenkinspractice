#!groovy
pipeline{
 agent any
 
  tools {
    maven 'maven'
  }
//   environment{
//     sonar_token=credentials("sonar_token_product_phase")
//     dojo_sonar_url= 'https://tools.publicis.sapient.com/sonar'
//   }


stages{
//         stage('Prepare Code Cloning from GIT'){
//             steps{
//                 withCredentials([string(credentialsId: 'git_token_shinamde'),variable:'git_token']){
//                     git branch: 'sonar-test',
//                     url:
//                 }
//             }
//         }

        stage('Compile and Clean'){
            steps{
                script{
                       try{
                            bat "mvn -f pom.xml clean compile"
                       }
                       catch(all){
                            echo "Compile and clean stage Failed"
                       }
                }
            }
        }

        stage('Test'){
                    steps{
                        script{
                               try{
                                    bat " mvn -f pom.xml test"
                               }
                               catch(all){
                                    echo "Test stage Failed"
                               }
                        }
                    }
                }

        stage('Maven Build'){
                    steps{
                        script{
                               try{
                                    bat "mvn -f pom.xml package"
                               }
                               catch(all){
                                    echo "Build stage Failed. War file not created"
                               }
                        }
                    }
                }
        stage('Verify'){
            steps{
                script{
                       try{
                            bat "mvn -f pom.xml verify"
                       }
                       catch(all){
                            echo "Verify stage Failed"
                       }
                }
            }
        }

        stage('Install'){
            steps{
                script{
                       try{
                            bat "mvn -f pom.xml install"
                       }
                       catch(all){
                            echo "Install stage Failed"
                       }
                }
            }
        }


        stage('SonarQube Report'){
            steps{
                withSonarQubeEnv(installationName: 'SonarQube'){
                    bat './mvnw clean sonar:sonar'
                }
//                 "mvn -f server/product-sonar/pom.xml sonar:sonar -Dsonar.projectName=  -Dsonar.projectKey= -Dsonar.host.url= -Dsonar.login="
            }
//             post{
//                 always{
//                     junit allowEmptyResults: true,testResults: '**/test-results/*.xml'
//                 }
//                 failure{
//                     echo "Pipeline Failed"
//                 }
//             }
        }

  }


}

